{"ast":null,"code":"import database from './database';\nclass AuthService {\n  constructor() {\n    this.currentUser = null;\n  }\n  signUp(userData) {\n    try {\n      const newUser = database.createUser(userData);\n      this.currentUser = newUser;\n      localStorage.setItem('bcm_currentUser', JSON.stringify(newUser));\n      return newUser;\n    } catch (error) {\n      throw error;\n    }\n  }\n  signIn(credentials) {\n    try {\n      const user = database.authenticateUser(credentials.email, credentials.password);\n      this.currentUser = user;\n      localStorage.setItem('bcm_currentUser', JSON.stringify(user));\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  }\n  signOut() {\n    this.currentUser = null;\n    localStorage.removeItem('bcm_currentUser');\n  }\n  getCurrentUser() {\n    if (this.currentUser) {\n      return this.currentUser;\n    }\n    const savedUser = localStorage.getItem('bcm_currentUser');\n    if (savedUser) {\n      this.currentUser = JSON.parse(savedUser);\n      return this.currentUser;\n    }\n    return null;\n  }\n  isLoggedIn() {\n    return this.getCurrentUser() !== null;\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["database","AuthService","constructor","currentUser","signUp","userData","newUser","createUser","localStorage","setItem","JSON","stringify","error","signIn","credentials","user","authenticateUser","email","password","signOut","removeItem","getCurrentUser","savedUser","getItem","parse","isLoggedIn"],"sources":["/home/saadkhankori/spm_proj_mockupUI/src/services/auth.js"],"sourcesContent":["import database from './database';\n\nclass AuthService {\n  constructor() {\n    this.currentUser = null;\n  }\n\n  signUp(userData) {\n    try {\n      const newUser = database.createUser(userData);\n      this.currentUser = newUser;\n      localStorage.setItem('bcm_currentUser', JSON.stringify(newUser));\n      return newUser;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  signIn(credentials) {\n    try {\n      const user = database.authenticateUser(credentials.email, credentials.password);\n      this.currentUser = user;\n      localStorage.setItem('bcm_currentUser', JSON.stringify(user));\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  signOut() {\n    this.currentUser = null;\n    localStorage.removeItem('bcm_currentUser');\n  }\n\n  getCurrentUser() {\n    if (this.currentUser) {\n      return this.currentUser;\n    }\n    \n    const savedUser = localStorage.getItem('bcm_currentUser');\n    if (savedUser) {\n      this.currentUser = JSON.parse(savedUser);\n      return this.currentUser;\n    }\n    \n    return null;\n  }\n\n  isLoggedIn() {\n    return this.getCurrentUser() !== null;\n  }\n}\n\nexport default new AuthService();"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAEjC,MAAMC,WAAW,CAAC;EAChBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,WAAW,GAAG,IAAI;EACzB;EAEAC,MAAMA,CAACC,QAAQ,EAAE;IACf,IAAI;MACF,MAAMC,OAAO,GAAGN,QAAQ,CAACO,UAAU,CAACF,QAAQ,CAAC;MAC7C,IAAI,CAACF,WAAW,GAAGG,OAAO;MAC1BE,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO,CAAC,CAAC;MAChE,OAAOA,OAAO;IAChB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF;EAEAC,MAAMA,CAACC,WAAW,EAAE;IAClB,IAAI;MACF,MAAMC,IAAI,GAAGf,QAAQ,CAACgB,gBAAgB,CAACF,WAAW,CAACG,KAAK,EAAEH,WAAW,CAACI,QAAQ,CAAC;MAC/E,IAAI,CAACf,WAAW,GAAGY,IAAI;MACvBP,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAEC,IAAI,CAACC,SAAS,CAACI,IAAI,CAAC,CAAC;MAC7D,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOH,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF;EAEAO,OAAOA,CAAA,EAAG;IACR,IAAI,CAAChB,WAAW,GAAG,IAAI;IACvBK,YAAY,CAACY,UAAU,CAAC,iBAAiB,CAAC;EAC5C;EAEAC,cAAcA,CAAA,EAAG;IACf,IAAI,IAAI,CAAClB,WAAW,EAAE;MACpB,OAAO,IAAI,CAACA,WAAW;IACzB;IAEA,MAAMmB,SAAS,GAAGd,YAAY,CAACe,OAAO,CAAC,iBAAiB,CAAC;IACzD,IAAID,SAAS,EAAE;MACb,IAAI,CAACnB,WAAW,GAAGO,IAAI,CAACc,KAAK,CAACF,SAAS,CAAC;MACxC,OAAO,IAAI,CAACnB,WAAW;IACzB;IAEA,OAAO,IAAI;EACb;EAEAsB,UAAUA,CAAA,EAAG;IACX,OAAO,IAAI,CAACJ,cAAc,CAAC,CAAC,KAAK,IAAI;EACvC;AACF;AAEA,eAAe,IAAIpB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}