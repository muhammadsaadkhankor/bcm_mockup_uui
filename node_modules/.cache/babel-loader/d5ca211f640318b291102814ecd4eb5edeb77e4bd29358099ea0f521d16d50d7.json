{"ast":null,"code":"const defaultMeals = {\n  1: [\n  // demo user meals\n  {\n    time: '8:30 AM',\n    name: 'Oatmeal with berries',\n    calories: 320,\n    type: 'Breakfast',\n    date: new Date().toISOString().split('T')[0]\n  }, {\n    time: '12:45 PM',\n    name: 'Grilled chicken salad',\n    calories: 450,\n    type: 'Lunch',\n    date: new Date().toISOString().split('T')[0]\n  }, {\n    time: '3:15 PM',\n    name: 'Apple and almonds',\n    calories: 180,\n    type: 'Snack',\n    date: new Date().toISOString().split('T')[0]\n  }]\n};\nclass MealService {\n  constructor() {\n    this.meals = JSON.parse(localStorage.getItem('bcm_meals')) || defaultMeals;\n  }\n  getUserMeals(userId) {\n    return this.meals[userId] || [];\n  }\n  addMeal(userId, meal) {\n    if (!this.meals[userId]) {\n      this.meals[userId] = [];\n    }\n    this.meals[userId].push({\n      ...meal,\n      date: new Date().toISOString().split('T')[0],\n      time: new Date().toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    });\n    localStorage.setItem('bcm_meals', JSON.stringify(this.meals));\n  }\n  getTodaysMeals(userId) {\n    const today = new Date().toISOString().split('T')[0];\n    return this.getUserMeals(userId).filter(meal => meal.date === today);\n  }\n  getTotalCaloriesToday(userId) {\n    return this.getTodaysMeals(userId).reduce((sum, meal) => sum + meal.calories, 0);\n  }\n}\nexport default new MealService();","map":{"version":3,"names":["defaultMeals","time","name","calories","type","date","Date","toISOString","split","MealService","constructor","meals","JSON","parse","localStorage","getItem","getUserMeals","userId","addMeal","meal","push","toLocaleTimeString","hour","minute","setItem","stringify","getTodaysMeals","today","filter","getTotalCaloriesToday","reduce","sum"],"sources":["/home/saadkhankori/spm_proj_mockupUI/src/services/meals.js"],"sourcesContent":["const defaultMeals = {\n  1: [ // demo user meals\n    { time: '8:30 AM', name: 'Oatmeal with berries', calories: 320, type: 'Breakfast', date: new Date().toISOString().split('T')[0] },\n    { time: '12:45 PM', name: 'Grilled chicken salad', calories: 450, type: 'Lunch', date: new Date().toISOString().split('T')[0] },\n    { time: '3:15 PM', name: 'Apple and almonds', calories: 180, type: 'Snack', date: new Date().toISOString().split('T')[0] }\n  ]\n};\n\nclass MealService {\n  constructor() {\n    this.meals = JSON.parse(localStorage.getItem('bcm_meals')) || defaultMeals;\n  }\n\n  getUserMeals(userId) {\n    return this.meals[userId] || [];\n  }\n\n  addMeal(userId, meal) {\n    if (!this.meals[userId]) {\n      this.meals[userId] = [];\n    }\n    this.meals[userId].push({\n      ...meal,\n      date: new Date().toISOString().split('T')[0],\n      time: new Date().toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })\n    });\n    localStorage.setItem('bcm_meals', JSON.stringify(this.meals));\n  }\n\n  getTodaysMeals(userId) {\n    const today = new Date().toISOString().split('T')[0];\n    return this.getUserMeals(userId).filter(meal => meal.date === today);\n  }\n\n  getTotalCaloriesToday(userId) {\n    return this.getTodaysMeals(userId).reduce((sum, meal) => sum + meal.calories, 0);\n  }\n}\n\nexport default new MealService();"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnB,CAAC,EAAE;EAAE;EACH;IAAEC,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,sBAAsB;IAAEC,QAAQ,EAAE,GAAG;IAAEC,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EAAE,CAAC,EACjI;IAAEP,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE,uBAAuB;IAAEC,QAAQ,EAAE,GAAG;IAAEC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EAAE,CAAC,EAC/H;IAAEP,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,QAAQ,EAAE,GAAG;IAAEC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EAAE,CAAC;AAE9H,CAAC;AAED,MAAMC,WAAW,CAAC;EAChBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAIf,YAAY;EAC5E;EAEAgB,YAAYA,CAACC,MAAM,EAAE;IACnB,OAAO,IAAI,CAACN,KAAK,CAACM,MAAM,CAAC,IAAI,EAAE;EACjC;EAEAC,OAAOA,CAACD,MAAM,EAAEE,IAAI,EAAE;IACpB,IAAI,CAAC,IAAI,CAACR,KAAK,CAACM,MAAM,CAAC,EAAE;MACvB,IAAI,CAACN,KAAK,CAACM,MAAM,CAAC,GAAG,EAAE;IACzB;IACA,IAAI,CAACN,KAAK,CAACM,MAAM,CAAC,CAACG,IAAI,CAAC;MACtB,GAAGD,IAAI;MACPd,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC5CP,IAAI,EAAE,IAAIK,IAAI,CAAC,CAAC,CAACe,kBAAkB,CAAC,OAAO,EAAE;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC;IACrF,CAAC,CAAC;IACFT,YAAY,CAACU,OAAO,CAAC,WAAW,EAAEZ,IAAI,CAACa,SAAS,CAAC,IAAI,CAACd,KAAK,CAAC,CAAC;EAC/D;EAEAe,cAAcA,CAACT,MAAM,EAAE;IACrB,MAAMU,KAAK,GAAG,IAAIrB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,OAAO,IAAI,CAACQ,YAAY,CAACC,MAAM,CAAC,CAACW,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACd,IAAI,KAAKsB,KAAK,CAAC;EACtE;EAEAE,qBAAqBA,CAACZ,MAAM,EAAE;IAC5B,OAAO,IAAI,CAACS,cAAc,CAACT,MAAM,CAAC,CAACa,MAAM,CAAC,CAACC,GAAG,EAAEZ,IAAI,KAAKY,GAAG,GAAGZ,IAAI,CAAChB,QAAQ,EAAE,CAAC,CAAC;EAClF;AACF;AAEA,eAAe,IAAIM,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}